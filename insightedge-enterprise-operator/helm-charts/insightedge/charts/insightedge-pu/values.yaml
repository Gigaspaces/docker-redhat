# Default values for insightedge-pu.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: insightedge-pu
image:
  repository: registry.connect.redhat.com/gigaspaces/insightedge:V15
  pullPolicy: IfNotPresent #Always
terminationGracePeriodSeconds: 30

service:
  # type: Service type.
  type: LoadBalancer
  # lrmi: External LRMI port for Space-based remoting
  lrmi:
    enabled: false
    port: 8200
    # initialNodePort: Starting value for the range of external LRMI node ports
    initialNodePort:


# license: Define the GigaSpaces InsightEdge licence key.
license: tryme

# resource: Define the URL of Processing Unit JAR file.
resourceUrl:
# properties: Used to override the pu.xml properties that are defined as placeholders, receives string such as: memoryThreshold=7g (see documentation)
properties:

# schema: Define the cluster schema (optional)
# valid values: partitioned, sync_replicated ,async_replicated
# If the schema is not defined, the default value is based on the partitions property (see below).
schema:

# partitions: Define the number of partitions in the cluster.
partitions:
# HA: Define whether the cluster should be highly available.
# Set the anti-affinity value to enabled=true to ensure pod distribution across different nodes.
ha:

# Define the pod anti-affinity
antiAffinity:
  # enabled: Define whether Pod anti-affinity is enabled.
  enabled: false

# Define the pod liveness probe
livenessProbe:
  # enabled: Define whether the liveness probe is enabled
  enabled: false
  # initialDelaySeconds: Number of seconds after the container has started before liveness probe is initiated
  initialDelaySeconds: 30
  # periodSeconds: How often (in seconds) to perform the probe
  periodSeconds: 5
  # failureThreshold: When the probe fails, how many retries before restarting the Pod
  failureThreshold: 3

# Define the pod readinessProbe probe
readinessProbe:
  # enabled: Define whether the readinessProbe probe is enabled
  enabled: false
  # initialDelaySeconds: Number of seconds after the container has started before readinessProbe probe is initiated
  initialDelaySeconds: 30
  # periodSeconds: How often (in seconds) to perform the probe
  periodSeconds: 5
  # failureThreshold: When the probe fails, how many retries before marking this pod unready
  failureThreshold: 3

# Define the memoryXtendVolume for persistent storage
memoryXtendVolume:
  enabled: false

  volumeMount:
    # name: The name of the volume mount.
    name: mx-volume
    # mountPath: The container path that is mapped to the volume.
    mountPath: /opt/gigaspaces/work/memoryxtend

  # volumeClaimTemplate: Template for persistent volume claim generation
  volumeClaimTemplate:
    # storage: Size of the persistent volume to claim (100Mi, 1000Gi etc.)
    storage:
    # storageClassName: The storage class from which the persistent volume is claimed
    storageClassName:
    # accessMode: Mode that the pod uses to access the persistent volume. Possible values: ReadWriteOnce, ReadOnlyMany, ReadWriteMany
    accessModes: ReadWriteOnce
    # persistentVolumeReclaimPolicy: Define what to do with the persistent volume after the claim is deleted. Possible values: Retain, Delete
    persistentVolumeReclaimPolicy: Delete

# instances: Define the number of instances (not applicable for `partitioned` schema)
instances:

# java: Define the Java options for each processing unit instance.
java:
  # heap: Define the size of the on-heap memory for each processing unit instance as either a percentage or an absolute value.
  heap: limit-150Mi
  # options: Configure additional Java options for each processing unit instance.
  options: -Duser.home=/opt/gigaspaces
# resources: Configure the processing unit instance resources.
resources:
  # Best practice is do not specify default resources, so the user can configure independently.
  # This can be especially risky when the chart is run on an environment with limited
  # resources, such as a minikube. If you still want to configure specific resources, uncomment the following
  # lines, adjust the values as necessary, and remove the curly brackets after 'resources:'.
  limits:
    memory: 400Mi

# manager: Used when you install the Platform Manager separately; insert the Platform Manager release name here.
manager:
  name:
  ports:
    api: 8090
  # discoveryTimeoutSeconds: Define the length of the timeout for checking if the Platform Manager is available.
  # If the timeout expires and the Platform Manager is still unavailable, the init pod will restart.
  discoveryTimeoutSeconds: 60
